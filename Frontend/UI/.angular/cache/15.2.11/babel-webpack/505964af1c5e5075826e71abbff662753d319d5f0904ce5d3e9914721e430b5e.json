{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/group.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/expense.service\";\nexport class AddExpenseComponent {\n  constructor(groupService, route, expenseService, router) {\n    this.groupService = groupService;\n    this.route = route;\n    this.expenseService = expenseService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.expenseForm = new FormGroup({\n      expenseName: new FormControl(null, [Validators.required]),\n      description: new FormControl(null, [Validators.required]),\n      expenseAmount: new FormControl(null, [Validators.required]),\n      EmailsPaidBy: new FormArray([]),\n      EmailSplitAmongs: new FormArray([])\n    });\n    this.route.params.subscribe(param => {\n      this.groupId = param['groupId'];\n    });\n    this.groupService.getUserInGroup(this.groupId).subscribe(data => {\n      this.usersInGroup = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  onAddPaid() {\n    const emailControl = new FormControl(null);\n    this.expenseForm.controls['EmailsPaidBy'].push(emailControl);\n  }\n  onAddSplit() {\n    const emailControl = new FormControl(null);\n    this.expenseForm.controls['EmailSplitAmongs'].push(emailControl);\n  }\n  onSubmit() {\n    const date = new Date();\n    const expenseDate = date.toLocaleDateString();\n    const expenseDetails = {\n      ...this.expenseForm.value,\n      expenseDate: expenseDate\n    };\n    this.expenseService.addNewExpense(expenseDetails, this.groupId).subscribe(res => {\n      console.log(res);\n      this.router.navigateByUrl(`/dashboard}`);\n    }, error => {\n      console.log(error);\n    });\n  }\n  static #_ = this.ɵfac = function AddExpenseComponent_Factory(t) {\n    return new (t || AddExpenseComponent)(i0.ɵɵdirectiveInject(i1.GroupService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ExpenseService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddExpenseComponent,\n    selectors: [[\"app-add-expense\"]],\n    decls: 0,\n    vars: 0,\n    template: function AddExpenseComponent_Template(rf, ctx) {},\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAU9E,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,YAAyB,EAASC,KAAoB,EAASC,cAA6B,EAASC,MAAa;IAAlH,iBAAY,GAAZH,YAAY;IAAsB,UAAK,GAALC,KAAK;IAAwB,mBAAc,GAAdC,cAAc;IAAwB,WAAM,GAANC,MAAM;EAAS;EACxIC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAC,IAAIT,SAAS,CAAC;MAC7BU,WAAW,EAAC,IAAIX,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACU,QAAQ,CAAC,CAAC;MACvDC,WAAW,EAAC,IAAIb,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACU,QAAQ,CAAC,CAAC;MACvDE,aAAa,EAAC,IAAId,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACU,QAAQ,CAAC,CAAC;MACzDG,YAAY,EAAC,IAAIhB,SAAS,CAAC,EAAE,CAAC;MAC9BiB,gBAAgB,EAAC,IAAIjB,SAAS,CAAC,EAAE;KAClC,CAAC;IACF,IAAI,CAACO,KAAK,CAACW,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAG;MACnC,IAAI,CAACC,OAAO,GAACD,KAAK,CAAC,SAAS,CAAC;IAC/B,CAAC,CAAC;IACF,IAAI,CAACd,YAAY,CAACgB,cAAc,CAAC,IAAI,CAACD,OAAO,CAAC,CAACF,SAAS,CAAEI,IAAI,IAAG;MAC/D,IAAI,CAACC,YAAY,GAACD,IAAI;IACxB,CAAC,EAAEE,GAAG,IAAG;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EACAG,SAAS;IACP,MAAMC,YAAY,GAAC,IAAI5B,WAAW,CAAC,IAAI,CAAC;IACvC,IAAI,CAACU,WAAW,CAACmB,QAAQ,CAAC,cAAc,CAAe,CAACC,IAAI,CAACF,YAAY,CAAC;EAC7E;EACAG,UAAU;IACR,MAAMH,YAAY,GAAC,IAAI5B,WAAW,CAAC,IAAI,CAAC;IACvC,IAAI,CAACU,WAAW,CAACmB,QAAQ,CAAC,kBAAkB,CAAe,CAACC,IAAI,CAACF,YAAY,CAAC;EACjF;EACAI,QAAQ;IACN,MAAMC,IAAI,GAAC,IAAIC,IAAI,EAAE;IACrB,MAAMC,WAAW,GAACF,IAAI,CAACG,kBAAkB,EAAE;IAC3C,MAAMC,cAAc,GAAC;MAAC,GAAG,IAAI,CAAC3B,WAAW,CAAC4B,KAAK;MAACH,WAAW,EAACA;IAAW,CAAC;IACxE,IAAI,CAAC5B,cAAc,CAACgC,aAAa,CAACF,cAAc,EAAC,IAAI,CAACjB,OAAO,CAAC,CAACF,SAAS,CAAEsB,GAAG,IAAG;MAC9Ef,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC;MAChB,IAAI,CAAChC,MAAM,CAACiC,aAAa,CAAC,aAAa,CAAC;IAC1C,CAAC,EAAEC,KAAK,IAAG;MACTjB,OAAO,CAACC,GAAG,CAACgB,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EAAC;qBAxCUvC,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAwC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA","names":["FormArray","FormControl","FormGroup","Validators","AddExpenseComponent","constructor","groupService","route","expenseService","router","ngOnInit","expenseForm","expenseName","required","description","expenseAmount","EmailsPaidBy","EmailSplitAmongs","params","subscribe","param","groupId","getUserInGroup","data","usersInGroup","err","console","log","onAddPaid","emailControl","controls","push","onAddSplit","onSubmit","date","Date","expenseDate","toLocaleDateString","expenseDetails","value","addNewExpense","res","navigateByUrl","error","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\add-expense\\add-expense.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GroupService } from '../services/group.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExpenseService } from '../services/expense.service';\n\n@Component({\n  selector: 'app-add-expense',\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  expenseForm!:any\n  usersInGroup!:any\n  groupId!:number\n  constructor(private groupService:GroupService,private route:ActivatedRoute,private expenseService:ExpenseService,private router:Router){}\n  ngOnInit(): void {\n    this.expenseForm=new FormGroup({\n      expenseName:new FormControl(null,[Validators.required]),\n      description:new FormControl(null,[Validators.required]),\n      expenseAmount:new FormControl(null,[Validators.required]),\n      EmailsPaidBy:new FormArray([]),\n      EmailSplitAmongs:new FormArray([])\n    });\n    this.route.params.subscribe((param)=>{\n      this.groupId=param['groupId'];\n    });\n    this.groupService.getUserInGroup(this.groupId).subscribe((data)=>{\n      this.usersInGroup=data;\n    },(err)=>{\n      console.log(err);\n    });\n  }\n  onAddPaid(){\n    const emailControl=new FormControl(null);\n    (this.expenseForm.controls['EmailsPaidBy'] as FormArray).push(emailControl);\n  }\n  onAddSplit(){\n    const emailControl=new FormControl(null);\n    (this.expenseForm.controls['EmailSplitAmongs'] as FormArray).push(emailControl);\n  }\n  onSubmit(){\n    const date=new Date();\n    const expenseDate=date.toLocaleDateString();\n    const expenseDetails={...this.expenseForm.value,expenseDate:expenseDate};\n    this.expenseService.addNewExpense(expenseDetails,this.groupId).subscribe((res)=>{\n      console.log(res);\n      this.router.navigateByUrl(`/dashboard}`);\n    },(error)=>{\n      console.log(error);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}