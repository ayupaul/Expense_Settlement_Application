{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction CreateGroupComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"Required Field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateGroupComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"Required Field\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreateGroupComponent {\n  ngOnInit() {\n    this.groupForm = new FormGroup({\n      groupName: new FormControl(null, Validators.required),\n      description: new FormControl(null, Validators.required)\n    });\n  }\n  onAdd() {\n    const date = new Date();\n    const createdDate = date.toLocaleDateString();\n    const groupDetail = {\n      ...this.groupForm.value,\n      createdDate: createdDate\n    };\n    console.log(groupDetail);\n  }\n  static #_ = this.ɵfac = function CreateGroupComponent_Factory(t) {\n    return new (t || CreateGroupComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateGroupComponent,\n    selectors: [[\"app-create-group\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"base\"], [1, \"login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleInputName\", \"placeholder\", \"Enter your Group Name\", \"formControlName\", \"groupName\", 1, \"form-control\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"exampleInputDescription\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleInputDescription\", \"placeholder\", \"Enter your Group Description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [2, \"color\", \"red\"]],\n    template: function CreateGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateGroupComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onAdd();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Group Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵtemplate(7, CreateGroupComponent_span_7_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, CreateGroupComponent_span_12_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵtext(14, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.groupForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.groupForm.controls[\"groupName\"].touched || ctx.groupForm.controls[\"groupName\"].dirty) && ctx.groupForm.controls[\"groupName\"].invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.groupForm.controls[\"groupName\"].touched || ctx.groupForm.controls[\"groupName\"].dirty) && ctx.groupForm.controls[\"groupName\"].invalid);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".base[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center; \\r\\n    align-items: center; \\r\\n    height: 100vh; \\r\\n  }\\r\\n  .form-label[_ngcontent-%COMP%] {\\r\\n    color: black\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLWdyb3VwL2NyZWF0ZS1ncm91cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QixFQUFFLGtDQUFrQztJQUMzRCxtQkFBbUIsRUFBRSxnQ0FBZ0M7SUFDckQsYUFBYSxFQUFFLGtFQUFrRTtFQUNuRjtFQUNBO0lBQ0U7RUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5iYXNlIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyogQ2VudGVyIHRoZSBjaGlsZCBob3Jpem9udGFsbHkgKi9cclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlciB0aGUgY2hpbGQgdmVydGljYWxseSAqL1xyXG4gICAgaGVpZ2h0OiAxMDB2aDsgLyogT3B0aW9uYWw6IE1ha2UgdGhlIGNvbnRhaW5lciB0YWtlIHVwIHRoZSBmdWxsIHZpZXdwb3J0IGhlaWdodCAqL1xyXG4gIH1cclxuICAuZm9ybS1sYWJlbCB7XHJcbiAgICBjb2xvcjogYmxhY2tcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICYzDC,gCAAgK;IAAAA,8BAAc;IAAAA,iBAAO;;;;;IAarLA,gCAAgK;IAAAA,8BAAc;IAAAA,iBAAO;;;ADlB/L,OAAM,MAAOC,oBAAoB;EAE/BC,QAAQ;IACP,IAAI,CAACC,SAAS,GAAC,IAAIL,SAAS,CAAC;MAC5BM,SAAS,EAAC,IAAIP,WAAW,CAAC,IAAI,EAACE,UAAU,CAACM,QAAQ,CAAC;MACnDC,WAAW,EAAC,IAAIT,WAAW,CAAC,IAAI,EAACE,UAAU,CAACM,QAAQ;KACpD,CAAC;EACH;EAEAE,KAAK;IACH,MAAMC,IAAI,GAAC,IAAIC,IAAI,EAAE;IACrB,MAAMC,WAAW,GAACF,IAAI,CAACG,kBAAkB,EAAE;IAC3C,MAAMC,WAAW,GAAC;MAAC,GAAG,IAAI,CAACT,SAAS,CAACU,KAAK;MAACH,WAAW,EAACA;IAAW,CAAC;IACnEI,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAC1B;EAAC;qBAdUX,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAe;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCRjCpB,8BAAkB;QAEkBA;UAAA,OAAYqB,WAAO;QAAA,EAAC;QAChDrB,8BAAkB;QACiCA,0BAAU;QAAAA,iBAAQ;QAEnEA,2BAME;QACFA,uEAAqL;QACvLA,iBAAM;QACNA,8BAAkB;QAC0CA,4BAAW;QAAAA,iBAAQ;QAE3EA,4BAME;QACJA,iBAAM;QACNA,yEAAqL;QAEvLA,kCAA8C;QAAAA,uBAAM;QAAAA,iBAAS;;;QA1BzDA,eAAuB;QAAvBA,yCAAuB;QAWlBA,eAAmI;QAAnIA,gKAAmI;QAanIA,eAAmI;QAAnIA,gKAAmI","names":["FormControl","FormGroup","Validators","i0","CreateGroupComponent","ngOnInit","groupForm","groupName","required","description","onAdd","date","Date","createdDate","toLocaleDateString","groupDetail","value","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\create-group\\create-group.component.ts","C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\create-group\\create-group.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-group',\n  templateUrl: './create-group.component.html',\n  styleUrls: ['./create-group.component.css']\n})\nexport class CreateGroupComponent implements OnInit {\n  groupForm!:FormGroup\n  ngOnInit(): void {\n   this.groupForm=new FormGroup({\n    groupName:new FormControl(null,Validators.required),\n    description:new FormControl(null,Validators.required)\n   })\n  }\n\n  onAdd(){\n    const date=new Date();\n    const createdDate=date.toLocaleDateString();\n    const groupDetail={...this.groupForm.value,createdDate:createdDate};\n    console.log(groupDetail);\n  }\n}\n","<div class=\"base\">\n    <div class=\"login\">\n      <form [formGroup]=\"groupForm\" (ngSubmit)=\"onAdd()\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputName\" class=\"form-label\">Group Name</label>\n  \n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"exampleInputName\"\n            placeholder=\"Enter your Group Name\"\n            formControlName=\"groupName\"\n          />\n          <span *ngIf=\"(groupForm.controls['groupName'].touched || groupForm.controls['groupName'].dirty) && groupForm.controls['groupName'].invalid\" style=\"color: red;\">Required Field</span>\n        </div>\n        <div class=\"mb-3\">\n            <label for=\"exampleInputDescription\" class=\"form-label\">Description</label>\n    \n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"exampleInputDescription\"\n              placeholder=\"Enter your Group Description\"\n              formControlName=\"description\"\n            />\n          </div>\n          <span *ngIf=\"(groupForm.controls['groupName'].touched || groupForm.controls['groupName'].dirty) && groupForm.controls['groupName'].invalid\" style=\"color: red;\">Required Field</span>\n       \n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}