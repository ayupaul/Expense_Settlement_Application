{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/group.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddExpenseComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"Required Field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddExpenseComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"Required Field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddExpenseComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \"Required Field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddExpenseComponent_div_17_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r8.email);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r8.email);\n  }\n}\nfunction AddExpenseComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"select\", 15);\n    i0.ɵɵtemplate(2, AddExpenseComponent_div_17_option_2_Template, 2, 2, \"option\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", i_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.usersInGroup);\n  }\n}\nfunction AddExpenseComponent_div_21_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r12.email);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r12.email);\n  }\n}\nfunction AddExpenseComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"select\", 15);\n    i0.ɵɵtemplate(2, AddExpenseComponent_div_21_option_2_Template, 2, 2, \"option\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r10 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", i_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.usersInGroup);\n  }\n}\nexport class AddExpenseComponent {\n  constructor(groupService, route) {\n    this.groupService = groupService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.expenseForm = new FormGroup({\n      expenseName: new FormControl(null, [Validators.required]),\n      expenseDescription: new FormControl(null, [Validators.required]),\n      expenseAmount: new FormControl(null, [Validators.required]),\n      paidBy: new FormArray([]),\n      splitAmong: new FormArray([])\n    });\n    this.route.params.subscribe(param => {\n      this.groupId = param['groupId'];\n    });\n    this.groupService.getUserInGroup(this.groupId).subscribe(data => {\n      this.usersInGroup = data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  onAddPaid() {\n    const emailControl = new FormControl(null);\n    this.expenseForm.controls['paidBy'].push(emailControl);\n  }\n  onAddSplit() {\n    const emailControl = new FormControl(null);\n    this.expenseForm.controls['splitAmong'].push(emailControl);\n  }\n  onSubmit() {\n    console.log(this.expenseForm);\n  }\n  static #_ = this.ɵfac = function AddExpenseComponent_Factory(t) {\n    return new (t || AddExpenseComponent)(i0.ɵɵdirectiveInject(i1.GroupService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddExpenseComponent,\n    selectors: [[\"app-add-expense\"]],\n    decls: 26,\n    vars: 7,\n    consts: [[1, \"expense-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleInputName\", \"placeholder\", \"Enter your Expense Name\", \"formControlName\", \"expenseName\", 1, \"form-control\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"exampleInputDescription\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleInputDescription\", \"placeholder\", \"Enter your Expense Description\", \"formControlName\", \"expenseDescription\", 1, \"form-control\"], [\"for\", \"exampleInputAmount\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"exampleInputAmount\", \"placeholder\", \"Enter your Expense Amount\", \"formControlName\", \"expenseAmount\", 1, \"form-control\"], [\"formArrayName\", \"paidBy\", 1, \"mb-3\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"formArrayName\", \"splitAmong\", 1, \"mb-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [2, \"color\", \"red\"], [1, \"form-select\", 3, \"formControlName\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function AddExpenseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddExpenseComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Expense Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵtemplate(5, AddExpenseComponent_span_5_Template, 2, 0, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Expense Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, AddExpenseComponent_span_10_Template, 2, 0, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Expense Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵtemplate(15, AddExpenseComponent_span_15_Template, 2, 0, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 9);\n        i0.ɵɵtemplate(17, AddExpenseComponent_div_17_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddExpenseComponent_Template_button_click_18_listener() {\n          return ctx.onAddPaid();\n        });\n        i0.ɵɵtext(19, \"Add Paid By User\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 12);\n        i0.ɵɵtemplate(21, AddExpenseComponent_div_21_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementStart(22, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddExpenseComponent_Template_button_click_22_listener() {\n          return ctx.onAddSplit();\n        });\n        i0.ɵɵtext(23, \"Add Split Among User\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"button\", 13);\n        i0.ɵɵtext(25, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.expenseForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.expenseForm.controls[\"expenseName\"].touched || ctx.expenseForm.controls[\"expenseName\"].dirty) && ctx.expenseForm.controls[\"expenseForm\"].invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.expenseForm.controls[\"expenseDescription\"].touched || ctx.expenseForm.controls[\"expenseDescription\"].dirty) && ctx.expenseForm.controls[\"expenseDescription\"].invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.expenseForm.controls[\"expenseAmount\"].touched || ctx.expenseForm.controls[\"expenseAmount\"].dirty) && ctx.expenseForm.controls[\"expenseAmount\"].invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.expenseForm.controls[\"paidBy\"].controls);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.expenseForm.controls[\"splitAmong\"].controls);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.expenseForm.invalid);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i4.FormArrayName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICUxEC,gCAA4K;IAAAA,8BAAc;IAAAA,iBAAO;;;;;IAajMA,gCAAiM;IAAAA,8BAAc;IAAAA,iBAAO;;;;;IAatNA,gCAAkL;IAAAA,8BAAc;IAAAA,iBAAO;;;;;IAOnMA,kCAA+D;IAAAA,YAAc;IAAAA,iBAAS;;;;IAA5CA,qCAAoB;IAACA,eAAc;IAAdA,mCAAc;;;;;IAFjFA,2BAAgF;IAE5EA,kFAAsF;IACxFA,iBAAS;;;;;IAFDA,eAAuB;IAAvBA,iDAAuB;IACJA,eAAe;IAAfA,6CAAe;;;;;IAUxCA,kCAA+D;IAAAA,YAAc;IAAAA,iBAAS;;;;IAA5CA,sCAAoB;IAACA,eAAc;IAAdA,oCAAc;;;;;IAFjFA,2BAAqF;IAEjFA,kFAAsF;IACxFA,iBAAS;;;;;IAFDA,eAAuB;IAAvBA,kDAAuB;IACJA,eAAe;IAAfA,6CAAe;;;AD5ClD,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,YAAyB,EAASC,KAAoB;IAAtD,iBAAY,GAAZD,YAAY;IAAsB,UAAK,GAALC,KAAK;EAAiB;EAC5EC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAC,IAAIR,SAAS,CAAC;MAC7BS,WAAW,EAAC,IAAIV,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACS,QAAQ,CAAC,CAAC;MACvDC,kBAAkB,EAAC,IAAIZ,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACS,QAAQ,CAAC,CAAC;MAC9DE,aAAa,EAAC,IAAIb,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACS,QAAQ,CAAC,CAAC;MACzDG,MAAM,EAAC,IAAIf,SAAS,CAAC,EAAE,CAAC;MACxBgB,UAAU,EAAC,IAAIhB,SAAS,CAAC,EAAE;KAC5B,CAAC;IACF,IAAI,CAACQ,KAAK,CAACS,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAG;MACnC,IAAI,CAACC,OAAO,GAACD,KAAK,CAAC,SAAS,CAAC;IAC/B,CAAC,CAAC;IACF,IAAI,CAACZ,YAAY,CAACc,cAAc,CAAC,IAAI,CAACD,OAAO,CAAC,CAACF,SAAS,CAAEI,IAAI,IAAG;MAC/D,IAAI,CAACC,YAAY,GAACD,IAAI;IACxB,CAAC,EAAEE,GAAG,IAAG;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EACAG,SAAS;IACP,MAAMC,YAAY,GAAC,IAAI3B,WAAW,CAAC,IAAI,CAAC;IACvC,IAAI,CAACS,WAAW,CAACmB,QAAQ,CAAC,QAAQ,CAAe,CAACC,IAAI,CAACF,YAAY,CAAC;EACvE;EACAG,UAAU;IACR,MAAMH,YAAY,GAAC,IAAI3B,WAAW,CAAC,IAAI,CAAC;IACvC,IAAI,CAACS,WAAW,CAACmB,QAAQ,CAAC,YAAY,CAAe,CAACC,IAAI,CAACF,YAAY,CAAC;EAC3E;EACAI,QAAQ;IACNP,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,WAAW,CAAC;EAC/B;EAAC;qBAhCUL,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAA4B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVhCjC,+BAA6E;QAA7CA;UAAA,OAAYkC,cAAU;QAAA,EAAC;QAEnDlC,8BAAkB;QACiCA,4BAAY;QAAAA,iBAAQ;QACrEA,2BAME;QACFA,sEAAiM;QACnMA,iBAAM;QAGNA,8BAAkB;QACwCA,mCAAmB;QAAAA,iBAAQ;QACnFA,2BAME;QACFA,wEAAsN;QACxNA,iBAAM;QAGNA,+BAAkB;QACmCA,+BAAc;QAAAA,iBAAQ;QACzEA,4BAME;QACFA,wEAAuM;QACzMA,iBAAM;QAGNA,+BAAyC;QACvCA,uEAIM;QACNA,mCAAsE;QAAtBA;UAAA,OAASkC,eAAW;QAAA,EAAC;QAAClC,iCAAgB;QAAAA,iBAAS;QAIjGA,gCAA6C;QAC3CA,uEAIM;QACNA,mCAAuE;QAAvBA;UAAA,OAASkC,gBAAY;QAAA,EAAC;QAAClC,qCAAoB;QAAAA,iBAAS;QAItGA,mCAA+E;QAAAA,uBAAM;QAAAA,iBAAS;;;QA7D5FA,2CAAyB;QAWlBA,eAA+I;QAA/IA,4KAA+I;QAa/IA,eAAoK;QAApKA,iMAAoK;QAapKA,eAAqJ;QAArJA,kLAAqJ;QAKtIA,eAA4C;QAA5CA,qEAA4C;QAU3CA,eAAgD;QAAhDA,yEAAgD;QAS3BA,eAAgC;QAAhCA,kDAAgC","names":["FormArray","FormControl","FormGroup","Validators","i0","AddExpenseComponent","constructor","groupService","route","ngOnInit","expenseForm","expenseName","required","expenseDescription","expenseAmount","paidBy","splitAmong","params","subscribe","param","groupId","getUserInGroup","data","usersInGroup","err","console","log","onAddPaid","emailControl","controls","push","onAddSplit","onSubmit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\add-expense\\add-expense.component.ts","C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\add-expense\\add-expense.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GroupService } from '../services/group.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-add-expense',\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  expenseForm!:any\n  usersInGroup!:any\n  groupId!:number\n  constructor(private groupService:GroupService,private route:ActivatedRoute){}\n  ngOnInit(): void {\n    this.expenseForm=new FormGroup({\n      expenseName:new FormControl(null,[Validators.required]),\n      expenseDescription:new FormControl(null,[Validators.required]),\n      expenseAmount:new FormControl(null,[Validators.required]),\n      paidBy:new FormArray([]),\n      splitAmong:new FormArray([])\n    });\n    this.route.params.subscribe((param)=>{\n      this.groupId=param['groupId'];\n    });\n    this.groupService.getUserInGroup(this.groupId).subscribe((data)=>{\n      this.usersInGroup=data;\n    },(err)=>{\n      console.log(err);\n    });\n  }\n  onAddPaid(){\n    const emailControl=new FormControl(null);\n    (this.expenseForm.controls['paidBy'] as FormArray).push(emailControl);\n  }\n  onAddSplit(){\n    const emailControl=new FormControl(null);\n    (this.expenseForm.controls['splitAmong'] as FormArray).push(emailControl);\n  }\n  onSubmit(){\n    console.log(this.expenseForm);\n  }\n}\n","<form [formGroup]=\"expenseForm\" (ngSubmit)=\"onSubmit()\" class=\"expense-form\">\n    <!-- Expense Name -->\n    <div class=\"mb-3\">\n      <label for=\"exampleInputName\" class=\"form-label\">Expense Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"exampleInputName\"\n        placeholder=\"Enter your Expense Name\"\n        formControlName=\"expenseName\"\n      />\n      <span *ngIf=\"(expenseForm.controls['expenseName'].touched || expenseForm.controls['expenseName'].dirty) && expenseForm.controls['expenseForm'].invalid\" style=\"color: red;\">Required Field</span>\n    </div>\n  \n    <!-- Expense Description -->\n    <div class=\"mb-3\">\n      <label for=\"exampleInputDescription\" class=\"form-label\">Expense Description</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"exampleInputDescription\"\n        placeholder=\"Enter your Expense Description\"\n        formControlName=\"expenseDescription\"\n      />\n      <span *ngIf=\"(expenseForm.controls['expenseDescription'].touched || expenseForm.controls['expenseDescription'].dirty) && expenseForm.controls['expenseDescription'].invalid\" style=\"color: red;\">Required Field</span>\n    </div>\n  \n    <!-- Expense Amount -->\n    <div class=\"mb-3\">\n      <label for=\"exampleInputAmount\" class=\"form-label\">Expense Amount</label>\n      <input\n        type=\"number\"\n        class=\"form-control\"\n        id=\"exampleInputAmount\"\n        placeholder=\"Enter your Expense Amount\"\n        formControlName=\"expenseAmount\"\n      />\n      <span *ngIf=\"(expenseForm.controls['expenseAmount'].touched || expenseForm.controls['expenseAmount'].dirty) && expenseForm.controls['expenseAmount'].invalid\" style=\"color: red;\">Required Field</span>\n    </div>\n  \n    <!-- Paid By Users -->\n    <div class=\"mb-3\" formArrayName=\"paidBy\">\n      <div *ngFor=\"let paid of expenseForm.controls['paidBy'].controls; let i=index;\">\n        <select formControlName=\"{{i}}\" class=\"form-select\">\n          <option *ngFor=\"let user of usersInGroup\" [value]=\"user.email\">{{user.email}}</option>\n        </select>\n      </div>\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"onAddPaid()\">Add Paid By User</button>\n    </div>\n  \n    <!-- Split Among Users -->\n    <div class=\"mb-3\" formArrayName=\"splitAmong\">\n      <div *ngFor=\"let split of expenseForm.controls['splitAmong'].controls; let i=index;\">\n        <select formControlName=\"{{i}}\" class=\"form-select\">\n          <option *ngFor=\"let user of usersInGroup\" [value]=\"user.email\">{{user.email}}</option>\n        </select>\n      </div>\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"onAddSplit()\">Add Split Among User</button>\n    </div>\n  \n    <!-- Submit Button -->\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"expenseForm.invalid\">Submit</button>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}