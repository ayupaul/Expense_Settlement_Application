{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./user-service.service\";\nexport class GroupService {\n  constructor(http, userService) {\n    this.http = http;\n    this.userService = userService;\n    this.BackendUrl = 'http://localhost:5006/api/Group';\n  }\n  createGroup(groupData) {\n    return this.http.post(`${this.BackendUrl}/${userId}`, groupData);\n  }\n  getMyGroups() {}\n  static #_ = this.ɵfac = function GroupService_Factory(t) {\n    return new (t || GroupService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserServiceService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GroupService,\n    factory: GroupService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YACUC,IAAgB,EAChBC,WAA+B;IAD/B,SAAI,GAAJD,IAAI;IACJ,gBAAW,GAAXC,WAAW;IAJrB,eAAU,GAAW,iCAAiC;EAKnD;EACHC,WAAW,CAACC,SAAc;IAExB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACC,UAAU,IAAIC,MAAM,EAAE,EAAEH,SAAS,CAAC;EAClE;EACAI,WAAW,IAEX;EAAC;qBAbUT,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAU,SAAZV,YAAY;IAAAW,YAFX;EAAM","names":["GroupService","constructor","http","userService","createGroup","groupData","post","BackendUrl","userId","getMyGroups","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\services\\group.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserServiceService } from './user-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GroupService implements on {\n  BackendUrl: string = 'http://localhost:5006/api/Group';\n  userId:any\n  constructor(\n    private http: HttpClient,\n    private userService: UserServiceService\n  ) {}\n  createGroup(groupData: any): Observable<any> {\n    \n    return this.http.post(`${this.BackendUrl}/${userId}`, groupData);\n  }\n  getMyGroups():Observable<any>{\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}