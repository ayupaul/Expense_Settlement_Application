{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user-service.service\";\nimport * as i2 from \"../services/user-store.service\";\nimport * as i3 from \"../services/group.service\";\nexport class DashboardComponent {\n  constructor(userService, userStoreService, groupService) {\n    this.userService = userService;\n    this.userStoreService = userStoreService;\n    this.groupService = groupService;\n  }\n  ngOnInit() {\n    const email = this.userService.getEmailFromToken();\n    this.userStoreService.setEmailToStore(email);\n    this.groupService.getMyGroups().subscribe(res => {\n      console.log(res);\n    }, error => {\n      console.log(error);\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService), i0.ɵɵdirectiveInject(i2.UserStoreService), i0.ɵɵdirectiveInject(i3.GroupService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 2,\n    vars: 0,\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"dashboard works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,WAA8B,EAASC,gBAAiC,EAASC,YAAyB;IAA1G,gBAAW,GAAXF,WAAW;IAA4B,qBAAgB,GAAhBC,gBAAgB;IAA0B,iBAAY,GAAZC,YAAY;EAAe;EAChIC,QAAQ;IACN,MAAMC,KAAK,GAAC,IAAI,CAACJ,WAAW,CAACK,iBAAiB,EAAE;IAChD,IAAI,CAACJ,gBAAgB,CAACK,eAAe,CAACF,KAAK,CAAC;IAC5C,IAAI,CAACF,YAAY,CAACK,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/CC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAElB,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EAAC;qBAZUd,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAe;IAAAC;IAAAC;IAAAC;MAAA;QCV/BC,yBAAG;QAAAA,gCAAgB;QAAAA,iBAAI","names":["DashboardComponent","constructor","userService","userStoreService","groupService","ngOnInit","email","getEmailFromToken","setEmailToStore","getMyGroups","subscribe","res","console","log","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../services/user-service.service';\nimport { UserStoreService } from '../services/user-store.service';\nimport { GroupService } from '../services/group.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n  myGroups:any\n  constructor(private userService:UserServiceService,private userStoreService:UserStoreService,private groupService:GroupService){}\n  ngOnInit(): void {\n    const email=this.userService.getEmailFromToken();\n    this.userStoreService.setEmailToStore(email);\n    this.groupService.getMyGroups().subscribe((res)=>{\n      console.log(res);\n      \n    },(error)=>{\n      console.log(error);\n    })\n  }\n}\n","<p>dashboard works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}