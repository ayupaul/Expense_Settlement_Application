{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdateUserComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"Enter correct Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"Enter correct Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateUserComponent {\n  constructor(userService, route) {\n    this.userService = userService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      this.userId = param['id'];\n    });\n    this.userService.getUserIdForAdmin(this.userId).subscribe(res => {\n      this.userDetail = res;\n    }, err => {\n      alert(\"Something went wrong\");\n    });\n    this.userForm = new FormGroup({\n      email: new FormControl(this.userDetail.email, [Validators.email]),\n      userName: new FormControl(this.userDetail.userName, [Validators.required]),\n      amount: new FormControl(this.userDetail.amount, [Validators.required])\n    });\n  }\n  static #_ = this.ɵfac = function UpdateUserComponent_Factory(t) {\n    return new (t || UpdateUserComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateUserComponent,\n    selectors: [[\"app-update-user\"]],\n    decls: 15,\n    vars: 4,\n    consts: [[1, \"base\"], [1, \"login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"exampleInputEmail1\", \"placeholder\", \"Enter your Email\", \"aria-describedby\", \"emailHelp\", \"formControlName\", \"email\", 1, \"form-control\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"exampleInputUserName1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleInputUserName1\", \"placeholder\", \"Enter your UserName\", \"aria-describedby\", \"emailHelp\", \"formControlName\", \"userName\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [2, \"color\", \"red\"]],\n    template: function UpdateUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateUserComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵtemplate(7, UpdateUserComponent_span_7_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"UserName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵtemplate(12, UpdateUserComponent_span_12_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵtext(14, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.userForm.controls[\"email\"].touched || ctx.userForm.controls[\"email\"].dirty) && ctx.userForm.controls[\"email\"].invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.userForm.controls[\"\"].touched || ctx.userForm.controls[\"email\"].dirty) && ctx.userForm.controls[\"email\"].invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICWzDC,gCAAiJ;IAAAA,mCAAmB;IAAAA,iBAAO;;;;;IAazKA,gCAA4I;IAAAA,mCAAmB;IAAAA,iBAAO;;;ADjBlL,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,WAA8B,EAASC,KAAoB;IAA3D,gBAAW,GAAXD,WAAW;IAA4B,UAAK,GAALC,KAAK;EAAiB;EACjFC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAG;MACnC,IAAI,CAACC,MAAM,GAACD,KAAK,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC;IACF,IAAI,CAACL,WAAW,CAACO,iBAAiB,CAAC,IAAI,CAACD,MAAM,CAAC,CAACF,SAAS,CAAEI,GAAG,IAAG;MAC/D,IAAI,CAACC,UAAU,GAACD,GAAG;IACrB,CAAC,EAAEE,GAAG,IAAG;MACPC,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,GAAC,IAAIjB,SAAS,CAAC;MAC1BkB,KAAK,EAAC,IAAInB,WAAW,CAAC,IAAI,CAACe,UAAU,CAACI,KAAK,EAAC,CAACjB,UAAU,CAACiB,KAAK,CAAC,CAAC;MAC/DC,QAAQ,EAAC,IAAIpB,WAAW,CAAC,IAAI,CAACe,UAAU,CAACK,QAAQ,EAAC,CAAClB,UAAU,CAACmB,QAAQ,CAAC,CAAC;MACxEC,MAAM,EAAC,IAAItB,WAAW,CAAC,IAAI,CAACe,UAAU,CAACO,MAAM,EAAC,CAACpB,UAAU,CAACmB,QAAQ,CAAC;KACpE,CAAC;EACJ;EAAC;qBAnBUjB,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVhCxB,8BAAkB;QAEiBA;UAAA,OAAYyB,aAAS;QAAA,EAAC;QACjDzB,8BAAkB;QACmCA,6BAAa;QAAAA,iBAAQ;QAExEA,2BAOE;QACFA,sEAA2K;QAC7KA,iBAAM;QACNA,8BAAkB;QACwCA,yBAAQ;QAAAA,iBAAQ;QAEtEA,4BAOE;QACFA,wEAAsK;QACxKA,iBAAM;QAERA,kCAA6E;QAAAA,uBAAM;QAAAA,iBAAS;;;QA5BxFA,eAAsB;QAAtBA,wCAAsB;QAYjBA,eAAoH;QAApHA,iJAAoH;QAalHA,eAA+G;QAA/GA,4IAA+G;QAG5EA,eAA8B;QAA9BA,gDAA8B","names":["FormControl","FormGroup","Validators","i0","UpdateUserComponent","constructor","userService","route","ngOnInit","params","subscribe","param","userId","getUserIdForAdmin","res","userDetail","err","alert","userForm","email","userName","required","amount","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\update-user\\update-user.component.ts","C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\update-user\\update-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../services/user-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit{\n  userDetail:any\n  userId:any\n  userForm!:FormGroup\n  constructor(private userService:UserServiceService,private route:ActivatedRoute){}\n  ngOnInit(): void {\n    this.route.params.subscribe((param)=>{\n      this.userId=param['id'];\n    })\n    this.userService.getUserIdForAdmin(this.userId).subscribe((res)=>{\n      this.userDetail=res;\n    },(err)=>{\n      alert(\"Something went wrong\");\n    })\n    this.userForm=new FormGroup({\n      email:new FormControl(this.userDetail.email,[Validators.email]),\n      userName:new FormControl(this.userDetail.userName,[Validators.required]),\n      amount:new FormControl(this.userDetail.amount,[Validators.required])\n    })\n  }\n  \n\n}\n","<div class=\"base\">\n    <div class=\"login\">\n      <form [formGroup]=\"userForm\" (ngSubmit)=\"onLogin()\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n  \n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"exampleInputEmail1\"\n            placeholder=\"Enter your Email\"\n            aria-describedby=\"emailHelp\"\n            formControlName=\"email\"\n          />\n          <span *ngIf=\"(userForm.controls['email'].touched || userForm.controls['email'].dirty) && userForm.controls['email'].invalid\" style=\"color: red;\">Enter correct Email</span>\n        </div>\n        <div class=\"mb-3\">\n            <label for=\"exampleInputUserName1\" class=\"form-label\">UserName</label>\n    \n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"exampleInputUserName1\"\n              placeholder=\"Enter your UserName\"\n              aria-describedby=\"emailHelp\"\n              formControlName=\"userName\"\n            />\n            <span *ngIf=\"(userForm.controls[''].touched || userForm.controls['email'].dirty) && userForm.controls['email'].invalid\" style=\"color: red;\">Enter correct Email</span>\n          </div>\n      \n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loginForm.invalid\">Submit</button>\n      </form>\n    </div>\n  </div>\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}