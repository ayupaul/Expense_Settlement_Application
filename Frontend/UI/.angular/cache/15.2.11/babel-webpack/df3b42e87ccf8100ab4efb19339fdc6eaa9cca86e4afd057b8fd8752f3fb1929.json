{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user-service.service\";\nimport * as i2 from \"@angular/router\";\nexport class UpdateUserComponent {\n  constructor(userService, route, router) {\n    this.userService = userService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      this.userId = param['id'];\n    });\n    this.userService.getUserIdForAdmin(this.userId).subscribe(res => {\n      this.userDetail = res;\n      this.initializeForm(this.userDetail);\n    }, err => {\n      alert('Something went wrong');\n    });\n  }\n  initializeForm(userDetail) {\n    this.userForm = new FormGroup({\n      email: new FormControl(userDetail.email, [Validators.required, Validators.email]),\n      userName: new FormControl(userDetail.userName, [Validators.required]),\n      amount: new FormControl(userDetail.amount, [Validators.required])\n    });\n  }\n  onUpdate() {\n    const user = this.userForm.value;\n    this.userService.updateUser(user).subscribe(res => {\n      this.router.navigateByUrl('/dashboard');\n    }, err => {\n      alert('Something went wrong!');\n    });\n  }\n  static #_ = this.ɵfac = function UpdateUserComponent_Factory(t) {\n    return new (t || UpdateUserComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateUserComponent,\n    selectors: [[\"app-update-user\"]],\n    decls: 0,\n    vars: 0,\n    template: function UpdateUserComponent_Template(rf, ctx) {},\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;AAOnE,OAAM,MAAOC,mBAAmB;EAK9BC,YACUC,WAA+B,EAC/BC,KAAqB,EACrBC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;EACb;EAEHC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAI;MACpC,IAAI,CAACC,MAAM,GAAGD,KAAK,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACN,WAAW,CAACQ,iBAAiB,CAAC,IAAI,CAACD,MAAM,CAAC,CAACF,SAAS,CACtDI,GAAG,IAAI;MACN,IAAI,CAACC,UAAU,GAAGD,GAAG;MACrB,IAAI,CAACE,cAAc,CAAC,IAAI,CAACD,UAAU,CAAC;IACtC,CAAC,EACAE,GAAG,IAAI;MACNC,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CACF;EACH;EAEAF,cAAc,CAACD,UAAe;IAC5B,IAAI,CAACI,QAAQ,GAAG,IAAIlB,SAAS,CAAC;MAC5BmB,KAAK,EAAE,IAAIpB,WAAW,CAACe,UAAU,CAACK,KAAK,EAAE,CAAClB,UAAU,CAACmB,QAAQ,EAAEnB,UAAU,CAACkB,KAAK,CAAC,CAAC;MACjFE,QAAQ,EAAE,IAAItB,WAAW,CAACe,UAAU,CAACO,QAAQ,EAAE,CAACpB,UAAU,CAACmB,QAAQ,CAAC,CAAC;MACrEE,MAAM,EAAE,IAAIvB,WAAW,CAACe,UAAU,CAACQ,MAAM,EAAE,CAACrB,UAAU,CAACmB,QAAQ,CAAC;KACjE,CAAC;EACJ;EAEAG,QAAQ;IACN,MAAMC,IAAI,GAAG,IAAI,CAACN,QAAQ,CAACO,KAAK;IAChC,IAAI,CAACrB,WAAW,CAACsB,UAAU,CAACF,IAAI,CAAC,CAACf,SAAS,CACxCI,GAAG,IAAI;MACN,IAAI,CAACP,MAAM,CAACqB,aAAa,CAAC,YAAY,CAAC;IACzC,CAAC,EACAX,GAAG,IAAI;MACNC,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CACF;EACH;EAAC;qBA7CUf,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAA0B;IAAAC;IAAAC;IAAAC;IAAAC;EAAA","names":["FormControl","FormGroup","Validators","UpdateUserComponent","constructor","userService","route","router","ngOnInit","params","subscribe","param","userId","getUserIdForAdmin","res","userDetail","initializeForm","err","alert","userForm","email","required","userName","amount","onUpdate","user","value","updateUser","navigateByUrl","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\update-user\\update-user.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../services/user-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css'],\n})\nexport class UpdateUserComponent implements OnInit {\n  userDetail: any;\n  userId: any;\n  userForm!: FormGroup;\n\n  constructor(\n    private userService: UserServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param) => {\n      this.userId = param['id'];\n    });\n\n    this.userService.getUserIdForAdmin(this.userId).subscribe(\n      (res) => {\n        this.userDetail = res;\n        this.initializeForm(this.userDetail);\n      },\n      (err) => {\n        alert('Something went wrong');\n      }\n    );\n  }\n\n  initializeForm(userDetail: any) {\n    this.userForm = new FormGroup({\n      email: new FormControl(userDetail.email, [Validators.required, Validators.email]),\n      userName: new FormControl(userDetail.userName, [Validators.required]),\n      amount: new FormControl(userDetail.amount, [Validators.required]),\n    });\n  }\n\n  onUpdate() {\n    const user = this.userForm.value;\n    this.userService.updateUser(user).subscribe(\n      (res) => {\n        this.router.navigateByUrl('/dashboard');\n      },\n      (err) => {\n        alert('Something went wrong!');\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}