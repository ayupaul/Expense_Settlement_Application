{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdateUserComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"Enter Correct Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"UserName is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateUserComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"Amount is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateUserComponent {\n  constructor(userService, route, router) {\n    this.userService = userService;\n    this.route = route;\n    this.router = router;\n    this.userForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      userName: new FormControl('', [Validators.required]),\n      amount: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      this.userId = param['id'];\n    });\n    this.userService.getUserIdForAdmin(this.userId).subscribe(res => {\n      this.userDetail = res;\n      this.initializeForm(this.userDetail);\n    }, err => {\n      alert('Something went wrong');\n    });\n  }\n  initializeForm(userDetail) {\n    this.userForm.patchValue({\n      email: userDetail.email,\n      userName: userDetail.userName,\n      amount: userDetail.amount\n    });\n  }\n  onUpdate() {\n    const user = this.userForm.value;\n    this.userService.updateUser(user, us).subscribe(res => {\n      this.router.navigateByUrl('/dashboard');\n    }, err => {\n      alert('Something went wrong!');\n    });\n  }\n  static #_ = this.ɵfac = function UpdateUserComponent_Factory(t) {\n    return new (t || UpdateUserComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateUserComponent,\n    selectors: [[\"app-update-user\"]],\n    decls: 20,\n    vars: 5,\n    consts: [[1, \"base\"], [1, \"login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleInputEmail1\", \"placeholder\", \"Enter your Email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"exampleInputUserName1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleInputUserName1\", \"placeholder\", \"Enter your UserName\", \"formControlName\", \"userName\", 1, \"form-control\"], [\"for\", \"exampleInputUserAmount1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleInputUserAmount1\", \"placeholder\", \"Enter your Amount\", \"formControlName\", \"amount\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [2, \"color\", \"red\"]],\n    template: function UpdateUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateUserComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onUpdate();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵtemplate(7, UpdateUserComponent_span_7_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"UserName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵtemplate(12, UpdateUserComponent_span_12_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 10);\n        i0.ɵɵtemplate(17, UpdateUserComponent_span_17_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵtext(19, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.userForm.controls[\"email\"].touched || ctx.userForm.controls[\"email\"].dirty) && ctx.userForm.controls[\"email\"].invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.userForm.controls[\"userName\"].touched || ctx.userForm.controls[\"userName\"].dirty) && ctx.userForm.controls[\"userName\"].invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.userForm.controls[\"amount\"].touched || ctx.userForm.controls[\"amount\"].dirty) && ctx.userForm.controls[\"amount\"].invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICSvDC,gCAGC;IAAAA,mCAAmB;IAAAA,iBAAO;;;;;IAW7BA,gCAGC;IAAAA,oCAAoB;IAAAA,iBAAO;;;;;IAW5BA,gCAGC;IAAAA,kCAAkB;IAAAA,iBAAO;;;ADjCpC,OAAM,MAAOC,mBAAmB;EAK9BC,YACUC,WAA+B,EAC/BC,KAAqB,EACrBC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAEd,IAAI,CAACC,QAAQ,GAAG,IAAIR,SAAS,CAAC;MAC5BS,KAAK,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACnEE,QAAQ,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACS,QAAQ,CAAC,CAAC;MACpDE,MAAM,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACS,QAAQ,CAAC;KAClD,CAAC;EACJ;EAEAG,QAAQ;IACN,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAI;MACpC,IAAI,CAACC,MAAM,GAAGD,KAAK,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACX,WAAW,CAACa,iBAAiB,CAAC,IAAI,CAACD,MAAM,CAAC,CAACF,SAAS,CACtDI,GAAG,IAAI;MACN,IAAI,CAACC,UAAU,GAAGD,GAAG;MACrB,IAAI,CAACE,cAAc,CAAC,IAAI,CAACD,UAAU,CAAC;IACtC,CAAC,EACAE,GAAG,IAAI;MACNC,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CACF;EACH;EAEAF,cAAc,CAACD,UAAe;IAC5B,IAAI,CAACZ,QAAQ,CAACgB,UAAU,CAAC;MACvBf,KAAK,EAAEW,UAAU,CAACX,KAAK;MACvBE,QAAQ,EAAES,UAAU,CAACT,QAAQ;MAC7BC,MAAM,EAAEQ,UAAU,CAACR;KACpB,CAAC;EACJ;EAEAa,QAAQ;IACN,MAAMC,IAAI,GAAG,IAAI,CAAClB,QAAQ,CAACmB,KAAK;IAChC,IAAI,CAACtB,WAAW,CAACuB,UAAU,CAACF,IAAI,EAACG,EAAE,CAAC,CAACd,SAAS,CAC3CI,GAAG,IAAI;MACN,IAAI,CAACZ,MAAM,CAACuB,aAAa,CAAC,YAAY,CAAC;IACzC,CAAC,EACAR,GAAG,IAAI;MACNC,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CACF;EACH;EAAC;qBAnDUpB,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAA4B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVhCjC,8BAAkB;QAEiBA;UAAA,OAAYkC,cAAU;QAAA,EAAC;QAClDlC,8BAAkB;QACqCA,qBAAK;QAAAA,iBAAQ;QAChEA,2BAME;QACFA,sEAG2B;QAC7BA,iBAAM;QACRA,8BAAkB;QACsCA,yBAAQ;QAAAA,iBAAQ;QACtEA,4BAME;QACFA,wEAG4B;QAC9BA,iBAAM;QACNA,+BAAkB;QACwCA,uBAAM;QAAAA,iBAAQ;QACtEA,6BAME;QACFA,wEAG0B;QAC5BA,iBAAM;QACNA,mCAA4E;QAAAA,uBAAM;QAAAA,iBAAS;;;QA3CvFA,eAAsB;QAAtBA,wCAAsB;QAWnBA,eAAoH;QAApHA,iJAAoH;QActHA,eAA6H;QAA7HA,0JAA6H;QAc7HA,eAAuH;QAAvHA,oJAAuH;QAI9EA,eAA6B;QAA7BA,+CAA6B","names":["FormControl","FormGroup","Validators","i0","UpdateUserComponent","constructor","userService","route","router","userForm","email","required","userName","amount","ngOnInit","params","subscribe","param","userId","getUserIdForAdmin","res","userDetail","initializeForm","err","alert","patchValue","onUpdate","user","value","updateUser","us","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\update-user\\update-user.component.ts","C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\update-user\\update-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../services/user-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css'],\n})\nexport class UpdateUserComponent implements OnInit {\n  userDetail: any;\n  userId: any;\n  userForm!: FormGroup;\n\n  constructor(\n    private userService: UserServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.userForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      userName: new FormControl('', [Validators.required]),\n      amount: new FormControl('', [Validators.required]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param) => {\n      this.userId = param['id'];\n    });\n\n    this.userService.getUserIdForAdmin(this.userId).subscribe(\n      (res) => {\n        this.userDetail = res;\n        this.initializeForm(this.userDetail);\n      },\n      (err) => {\n        alert('Something went wrong');\n      }\n    );\n  }\n\n  initializeForm(userDetail: any) {\n    this.userForm.patchValue({\n      email: userDetail.email,\n      userName: userDetail.userName,\n      amount: userDetail.amount,\n    });\n  }\n\n  onUpdate() {\n    const user = this.userForm.value;\n    this.userService.updateUser(user,us).subscribe(\n      (res) => {\n        this.router.navigateByUrl('/dashboard');\n      },\n      (err) => {\n        alert('Something went wrong!');\n      }\n    );\n  }\n}\n","<div class=\"base\">\n    <div class=\"login\">\n      <form [formGroup]=\"userForm\" (ngSubmit)=\"onUpdate()\">\n        <div class=\"mb-3\">\n            <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"exampleInputEmail1\"\n              placeholder=\"Enter your Email\"\n              formControlName=\"email\"\n            />\n            <span\n              *ngIf=\"(userForm.controls['email'].touched || userForm.controls['email'].dirty) && userForm.controls['email'].invalid\"\n              style=\"color: red;\"\n            >Enter Correct Email</span>\n          </div>\n        <div class=\"mb-3\">\n          <label for=\"exampleInputUserName1\" class=\"form-label\">UserName</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"exampleInputUserName1\"\n            placeholder=\"Enter your UserName\"\n            formControlName=\"userName\"\n          />\n          <span\n            *ngIf=\"(userForm.controls['userName'].touched || userForm.controls['userName'].dirty) && userForm.controls['userName'].invalid\"\n            style=\"color: red;\"\n          >UserName is required</span>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"exampleInputUserAmount1\" class=\"form-label\">Amount</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"exampleInputUserAmount1\"\n            placeholder=\"Enter your Amount\"\n            formControlName=\"amount\"\n          />\n          <span\n            *ngIf=\"(userForm.controls['amount'].touched || userForm.controls['amount'].dirty) && userForm.controls['amount'].invalid\"\n            style=\"color: red;\"\n          >Amount is required</span>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"userForm.invalid\">Submit</button>\n      </form>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}