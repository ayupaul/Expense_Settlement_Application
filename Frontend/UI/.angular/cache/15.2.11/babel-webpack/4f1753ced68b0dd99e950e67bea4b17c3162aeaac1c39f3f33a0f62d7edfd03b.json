{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user-service.service\";\nimport * as i2 from \"../services/user-store.service\";\nimport * as i3 from \"../services/group.service\";\nimport * as i4 from \"@angular/common\";\nfunction DashboardComponent_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 1)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_6_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.viewDetails(ctx_r2.book.bookId));\n    });\n    i0.ɵɵtext(5, \"View Details\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(group_r1.groupName);\n  }\n}\nexport class DashboardComponent {\n  constructor(userService, userStoreService, groupService) {\n    this.userService = userService;\n    this.userStoreService = userStoreService;\n    this.groupService = groupService;\n  }\n  ngOnInit() {\n    const email = this.userService.getEmailFromToken();\n    this.userStoreService.setEmailToStore(email);\n    this.groupService.getMyGroups().subscribe(res => {\n      console.log(res);\n      this.myGroups = res;\n    }, error => {\n      console.log(error);\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService), i0.ɵɵdirectiveInject(i2.UserStoreService), i0.ɵɵdirectiveInject(i3.GroupService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"table\", \"table-striped\"], [1, \"text-center\"], [\"class\", \"text-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\", 1)(3, \"th\");\n        i0.ɵɵtext(4, \"Group Name\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"tbody\");\n        i0.ɵɵtemplate(6, DashboardComponent_tr_6_Template, 6, 1, \"tr\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.myGroups);\n      }\n    },\n    dependencies: [i4.NgForOf],\n    styles: [\".table[_ngcontent-%COMP%]{\\r\\n    width: 800px;\\r\\n    margin-left: 200px;\\r\\n   margin-top: 50px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtHQUNuQixnQkFBZ0I7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIudGFibGV7XHJcbiAgICB3aWR0aDogODAwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMjAwcHg7XHJcbiAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;IAQMA,6BAAuD;IACjDA,YAAqB;IAAAA,iBAAK;IAE9BA,0BAAI;IAAgCA;MAAAA;MAAA;MAAA,OAASA,qDAAwB;IAAA,EAAC;IAACA,4BAAY;IAAAA,iBAAS;;;;IAFxFA,eAAqB;IAArBA,wCAAqB;;;ACCjC,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,WAA8B,EAASC,gBAAiC,EAASC,YAAyB;IAA1G,gBAAW,GAAXF,WAAW;IAA4B,qBAAgB,GAAhBC,gBAAgB;IAA0B,iBAAY,GAAZC,YAAY;EAAe;EAChIC,QAAQ;IACN,MAAMC,KAAK,GAAC,IAAI,CAACJ,WAAW,CAACK,iBAAiB,EAAE;IAChD,IAAI,CAACJ,gBAAgB,CAACK,eAAe,CAACF,KAAK,CAAC;IAC5C,IAAI,CAACF,YAAY,CAACK,WAAW,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/CC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACG,QAAQ,GAACH,GAAG;IACnB,CAAC,EAAEI,KAAK,IAAG;MACTH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EAAC;qBAZUf,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDV/BrB,gCAAmC;QAGvBA,0BAAU;QAAAA,iBAAK;QAIvBA,6BAAO;QACLA,iEAKK;QACPA,iBAAQ;;;QANgBA,eAAW;QAAXA,sCAAW","names":["i0","DashboardComponent","constructor","userService","userStoreService","groupService","ngOnInit","email","getEmailFromToken","setEmailToStore","getMyGroups","subscribe","res","console","log","myGroups","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\dashboard\\dashboard.component.html","C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["<table class=\"table table-striped\">\n    <thead>\n      <tr class=\"text-center\">\n        <th>Group Name</th>\n\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let group of myGroups\" class=\"text-center\">\n        <td>{{ group.groupName }}</td>\n        \n        <td><button class=\"btn btn-primary\" (click)=\"viewDetails(book.bookId)\">View Details</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../services/user-service.service';\nimport { UserStoreService } from '../services/user-store.service';\nimport { GroupService } from '../services/group.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n  myGroups:any\n  constructor(private userService:UserServiceService,private userStoreService:UserStoreService,private groupService:GroupService){}\n  ngOnInit(): void {\n    const email=this.userService.getEmailFromToken();\n    this.userStoreService.setEmailToStore(email);\n    this.groupService.getMyGroups().subscribe((res)=>{\n      console.log(res);\n      this.myGroups=res;\n    },(error)=>{\n      console.log(error);\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}