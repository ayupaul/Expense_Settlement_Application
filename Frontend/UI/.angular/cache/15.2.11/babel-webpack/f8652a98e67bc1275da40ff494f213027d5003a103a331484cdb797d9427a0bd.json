{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserServiceService {\n  constructor(http) {\n    this.http = http;\n    this.BackendUrl = \"http://localhost:5006/api\";\n  }\n  loginService(userDetails) {\n    return this.http.post(`${this.BackendUrl}/Account`, userDetails);\n  }\n  storeToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  decodeToken() {\n    const jwt = new JwtHelperService();\n    const token = this.getToken() ?? '';\n    return jwt.decodeToken(token);\n  }\n  getEmailFromToken() {\n    const token = this.decodeToken();\n    if (token) {\n      const email = token.name;\n      return email;\n    }\n    return \"\";\n  }\n  getUserIdFromToken() {\n    const token = this.decodeToken();\n    if (token) {\n      const userId = token.UserId;\n      return userId;\n    }\n    return 0;\n  }\n  getAllUsers() {\n    return this.http.get(`${this}`);\n  }\n  static #_ = this.ɵfac = function UserServiceService_Factory(t) {\n    return new (t || UserServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserServiceService,\n    factory: UserServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,gBAAgB,QAAQ,oBAAoB;;;AAMrD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IADxB,eAAU,GAAQ,2BAA2B;EACN;EACvCC,YAAY,CAACC,WAAe;IAC1B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,UAAU,UAAU,EAACF,WAAW,CAAC;EACjE;EACAG,UAAU,CAACC,KAAY;IACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACF,KAAK,CAAC;EACrC;EACAG,QAAQ;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EACAC,WAAW;IACT,MAAMC,GAAG,GAAC,IAAIf,gBAAgB,EAAE;IAChC,MAAMS,KAAK,GAAC,IAAI,CAACG,QAAQ,EAAE,IAAE,EAAE;IAC/B,OAAOG,GAAG,CAACD,WAAW,CAACL,KAAK,CAAC;EAC/B;EACAO,iBAAiB;IACf,MAAMP,KAAK,GAAC,IAAI,CAACK,WAAW,EAAE;IAC9B,IAAGL,KAAK,EAAC;MACP,MAAMQ,KAAK,GAACR,KAAK,CAACS,IAAI;MACtB,OAAOD,KAAK;;IAEd,OAAO,EAAE;EACX;EACAE,kBAAkB;IAChB,MAAMV,KAAK,GAAC,IAAI,CAACK,WAAW,EAAE;IAC9B,IAAGL,KAAK,EAAC;MACP,MAAMW,MAAM,GAACX,KAAK,CAACY,MAAM;MACzB,OAAOD,MAAM;;IAEf,OAAO,CAAC;EACV;EACAE,WAAW;IACT,OAAO,IAAI,CAACnB,IAAI,CAACoB,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC;EACjC;EAAC;qBAnCUtB,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAuB,SAAlBvB,kBAAkB;IAAAwB,YAFjB;EAAM","names":["JwtHelperService","UserServiceService","constructor","http","loginService","userDetails","post","BackendUrl","storeToken","token","localStorage","setItem","getToken","getItem","decodeToken","jwt","getEmailFromToken","email","name","getUserIdFromToken","userId","UserId","getAllUsers","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\services\\user-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n  BackendUrl:string=\"http://localhost:5006/api\"\n  constructor(private http:HttpClient) { }\n  loginService(userDetails:any):Observable<any>{\n    return this.http.post(`${this.BackendUrl}/Account`,userDetails);\n  }\n  storeToken(token:string){\n    localStorage.setItem('token',token);\n  }\n  getToken(){\n    return localStorage.getItem('token');\n  }\n  decodeToken(){\n    const jwt=new JwtHelperService();\n    const token=this.getToken()??'';\n    return jwt.decodeToken(token);\n  }\n  getEmailFromToken(){\n    const token=this.decodeToken();\n    if(token){\n      const email=token.name;\n      return email;\n    }\n    return \"\";\n  }\n  getUserIdFromToken(){\n    const token=this.decodeToken();\n    if(token){\n      const userId=token.UserId;\n      return userId;\n    }\n    return 0;\n  }\n  getAllUsers():Observable<any>{\n    return this.http.get(`${this}`)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}