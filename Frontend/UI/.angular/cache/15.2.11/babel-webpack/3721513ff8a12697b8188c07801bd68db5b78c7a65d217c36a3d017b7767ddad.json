{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user-service.service\";\nimport * as i2 from \"@angular/router\";\nfunction LoginComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"Enter correct Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"Password length should be minimum 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    });\n  }\n  onLogin() {\n    console.log(this.loginForm);\n    const email = this.loginForm.controls['email'].value;\n    const password = this.loginForm.controls['password'].value;\n    this.userService.loginService({\n      email,\n      password\n    }).subscribe(data => {\n      console.log(data);\n      this.userService.storeToken(data.token);\n      this.router.navigateByUrl('/dashboard');\n    }, error => {\n      console.log(error);\n      alert('Something went wrong!');\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 15,\n    vars: 4,\n    consts: [[1, \"base\"], [1, \"login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"exampleInputEmail1\", \"placeholder\", \"Enter your Email\", \"aria-describedby\", \"emailHelp\", \"formControlName\", \"email\", 1, \"form-control\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"Enter your Password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [2, \"color\", \"red\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵtemplate(7, LoginComponent_span_7_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵtemplate(12, LoginComponent_span_12_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵtext(14, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.loginForm.controls[\"email\"].touched || ctx.loginForm.controls[\"email\"].dirty) && ctx.loginForm.controls[\"email\"].invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.loginForm.controls[\"password\"].touched || ctx.loginForm.controls[\"password\"].dirty) && ctx.loginForm.controls[\"password\"].invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    styles: [\".base[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center; \\r\\n  align-items: center; \\r\\n  height: 100vh; \\r\\n}\\r\\n.form-label[_ngcontent-%COMP%] {\\r\\n  color: black\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYix1QkFBdUIsRUFBRSxrQ0FBa0M7RUFDM0QsbUJBQW1CLEVBQUUsZ0NBQWdDO0VBQ3JELGFBQWEsRUFBRSxrRUFBa0U7QUFDbkY7QUFDQTtFQUNFO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFzZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyogQ2VudGVyIHRoZSBjaGlsZCBob3Jpem9udGFsbHkgKi9cclxuICBhbGlnbi1pdGVtczogY2VudGVyOyAvKiBDZW50ZXIgdGhlIGNoaWxkIHZlcnRpY2FsbHkgKi9cclxuICBoZWlnaHQ6IDEwMHZoOyAvKiBPcHRpb25hbDogTWFrZSB0aGUgY29udGFpbmVyIHRha2UgdXAgdGhlIGZ1bGwgdmlld3BvcnQgaGVpZ2h0ICovXHJcbn1cclxuLmZvcm0tbGFiZWwge1xyXG4gIGNvbG9yOiBibGFja1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICa3DC,gCAAoJ;IAAAA,mCAAmB;IAAAA,iBAAO;;;;;IAa9KA,gCAA6J;IAAAA,8DAA8C;IAAAA,iBAAO;;;ADhB1N,OAAM,MAAOC,cAAc;EAEzBC,YACUC,WAA+B,EAC/BC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;EACb;EACHC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAIR,SAAS,CAAC;MAC7BS,KAAK,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAIZ,WAAW,CAAC,IAAI,EAAE,CAC9BE,UAAU,CAACS,QAAQ,EACnBT,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EACJ;EACAC,OAAO;IACLC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,SAAS,CAAC;IAC3B,MAAMC,KAAK,GAAG,IAAI,CAACD,SAAS,CAACQ,QAAQ,CAAC,OAAO,CAAC,CAACC,KAAK;IACpD,MAAMN,QAAQ,GAAG,IAAI,CAACH,SAAS,CAACQ,QAAQ,CAAC,UAAU,CAAC,CAACC,KAAK;IAC1D,IAAI,CAACZ,WAAW,CAACa,YAAY,CAAC;MAAET,KAAK;MAAEE;IAAQ,CAAE,CAAC,CAACQ,SAAS,CACzDC,IAAI,IAAI;MACPN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;MACjB,IAAI,CAACf,WAAW,CAACgB,UAAU,CAACD,IAAI,CAACE,KAAK,CAAC;MACvC,IAAI,CAAChB,MAAM,CAACiB,aAAa,CAAC,YAAY,CAAC;IACzC,CAAC,EACAC,KAAK,IAAI;MACRV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;MAClBC,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CACF;EACH;EAAC;qBA9BUtB,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAuB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCX3B5B,8BAAkB;QAEgBA;UAAA,OAAY6B,aAAS;QAAA,EAAC;QAClD7B,8BAAkB;QACmCA,6BAAa;QAAAA,iBAAQ;QAExEA,2BAOE;QACFA,iEAA8K;QAChLA,iBAAM;QAENA,8BAAkB;QACsCA,yBAAQ;QAAAA,iBAAQ;QAEtEA,4BAME;QACFA,mEAAkN;QACpNA,iBAAM;QAENA,kCAA6E;QAAAA,uBAAM;QAAAA,iBAAS;;;QA5BxFA,eAAuB;QAAvBA,yCAAuB;QAYlBA,eAAuH;QAAvHA,oJAAuH;QAavHA,eAAgI;QAAhIA,6JAAgI;QAG3FA,eAA8B;QAA9BA,gDAA8B","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","userService","router","ngOnInit","loginForm","email","required","password","minLength","onLogin","console","log","controls","value","loginService","subscribe","data","storeToken","token","navigateByUrl","error","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\login\\login.component.ts","C:\\Users\\ayushpal\\Expense_Settle_Application\\Frontend\\UI\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserServiceService } from '../services/user-service.service';\nimport { UserStoreService } from '../services/user-store.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  constructor(\n    private userService: UserServiceService,\n    private router: Router\n  ) {}\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n    });\n  }\n  onLogin() {\n    console.log(this.loginForm);\n    const email = this.loginForm.controls['email'].value;\n    const password = this.loginForm.controls['password'].value;\n    this.userService.loginService({ email, password }).subscribe(\n      (data) => {\n        console.log(data);\n        this.userService.storeToken(data.token);\n        this.router.navigateByUrl('/dashboard');\n      },\n      (error) => {\n        console.log(error);\n        alert('Something went wrong!');\n      }\n    );\n  }\n}\n","<div class=\"base\">\n  <div class=\"login\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n      <div class=\"mb-3\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          placeholder=\"Enter your Email\"\n          aria-describedby=\"emailHelp\"\n          formControlName=\"email\"\n        />\n        <span *ngIf=\"(loginForm.controls['email'].touched || loginForm.controls['email'].dirty) && loginForm.controls['email'].invalid\" style=\"color: red;\">Enter correct Email</span>\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"exampleInputPassword1\"\n          placeholder=\"Enter your Password\"\n          formControlName=\"password\"\n        />\n        <span *ngIf=\"(loginForm.controls['password'].touched || loginForm.controls['password'].dirty) && loginForm.controls['password'].invalid\" style=\"color: red;\">Password length should be minimum 8 characters</span>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loginForm.invalid\">Submit</button>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}